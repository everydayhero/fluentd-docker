<source>
  @type syslog
  format everydayhero
  tag system
  port 5140
  bind 0.0.0.0
</source>

<source>
  @type tail
  path /var/lib/docker/containers/*/*.log
  pos_file /var/log/containers.log.pos
  time_format %Y-%m-%dT%H:%M:%S.%N
  tag docker.*
  format json
  read_from_head true
  keep_time_key true
</source>

<source>
  @type tail
  path /var/log/audit/audit.log
  pos_file /var/log/audit.log.pos
  time_format %s
  format /(^type=(?<type>AVC) msg=audit\((?<time>\w+).*: apparmor=\"(?<resolution>\w+)\" operation=\"(?<operation>\w+)\"( profile=\"(?<profile>[^ ]+)\"){0,1}( name=\"(?<name>[^ ]+)\"){0,1} pid=(?<pid>\d+) comm=\"{0,1}(?<comm>[^ ]+)\"{0,1}( requested_mask=\"(?<requested_mask>\w+)\" denied_mask=\"(?<denied_mask>\w+)\" fsuid=(?<fsuid>\d+))?|^type=(?<type>SYSCALL) msg=audit\((?<time>\w+).*: .* syscall=(?<syscall>\d+) success=(?<success>\w+) exit=(?<exit>\d+) .* pid=(?<pid>\d+) .* uid=(?<uid>\d+) .* comm=\"{0,1}(?<comm>[^ ]+)\"{0,1} (exe=\"(?<exe>[^\"])+\")?|^type=(?<type>\w+) msg=audit\((?<time>\w+).*: pid=(?<pid>\d+) uid=(?<uid>\d+) .* msg='(?<message>.*)'|type=(?<type>NETFILTER_CFG) msg=audit\((?<time>\w+).*: table=(?<table>[^ ]+) family=(?<family>\d+) entries=(?<entries>\d+)|type=(?<type>ANOM_PROMISCUOUS) msg=audit\((?<time>\w+).*: dev=(?<device>[^ ]+) prom=(?<prom>\d+) old_prom=(?<old_prom>\d+).*)|type=(?<type>DAEMON\w+) msg=audit\((?<time>\w+).*: (?<message>.*)|type=(?<type>PROCTITLE) msg=audit\((?<time>\w+).*: proctitle=(?<proctitle>.*)|type=(?<type>SOCKADDR) msg=audit\((?<time>\w+).*: saddr=(?<saddr>.*)|type=(?<type>CONFIG_CHANGE) msg=audit\((?<time>\w+).*: (?<message>.*)|type=(?<type>LOGIN) msg=audit\((?<time>\w+).*: pid=(?<pid>\d+) uid=(?<uid>\d+)|type=(?<type>CWD) msg=audit\((?<time>\w+).*:\s* cwd=\"(?<cwd>[^\"]+)\"|^type=(?<type>PATH) msg=audit\((?<time>\w+).*: .* name=\"(?<name>[^\"]+)\" .* mode=(?<mode>\d+)/
  tag audit
  read_from_head true
  keep_time_key true
</source>

<source>
  @type tail
  path /var/log/auth.log
  pos_file /var/log/auth.log.pos
  time_format %b %d %H:%M:%S
  format /^(?<time>[^ ]*\s*[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
  tag auth
  read_from_head true
  keep_time_key true
</source>

<source>
  @type tail
  path /var/log/syslog
  pos_file /var/log/syslog.pos
  time_format %b %d %H:%M:%S
  format /^(?<time>[^ ]*\s*[^ ]* [^ ]*) (?<host>[^ ]*) (?<ident>[a-zA-Z0-9_\/\.\-]*)(?:\[(?<pid>[0-9]+)\])?(?:[^\:]*\:)? *(?<message>.*)$/
  tag syslog
  read_from_head true
  keep_time_key true
</source>

<filter docker.var.lib.docker.containers.*.*.log>
  @type docker_metadata
</filter>

<match docker.var.lib.docker.containers.*.*.log>
  @type colour_stripper
  strip_fields log
</match>

<filter **>
  @type record_transformer
  <record>
    hostname ${hostname}
  </record>
</filter>

<match audit>
  @type cloudwatch_logs

  log_group_name "Linux-Audit-Logs"
  log_stream_name_key hostname
  auto_create_stream true
</match>

<match auth>
  @type cloudwatch_logs

  log_group_name "Linux-Auth-Logs"
  log_stream_name_key hostname
  auto_create_stream true
</match>

<match syslog>
  @type cloudwatch_logs

  log_group_name "Linux-Syslog-Logs"
  log_stream_name_key hostname
  auto_create_stream true
</match>

<match docker.*>
  @type kinesis_streams

  stream_name "#{ENV['KINESIS_STREAM']}"

  aws_key_id  "#{ENV['AWS_KEY']}"
  aws_sec_key "#{ENV['AWS_SECRET']}"
  region      "#{ENV['AWS_REGION']}"

  detach_process 5
  num_threads 15
  buffer_chunk_limit 1m
  queued_chunk_flush_interval 0.01
  flush_interval 1
  try_flush_interval 0.1
</match>

<match journalctl>
  @type null
</match>
